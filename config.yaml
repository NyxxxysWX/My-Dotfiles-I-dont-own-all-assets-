general:
  # Commands to run when the WM has started. This is useful for running a

  # script or launching another application.

  # Example: The below command launches Zebar.
  startup_commands:
    [
      "shell-exec zebar",
      "move --workspace 2",
      "move --workspace 3",
      "move --workspace 4",
      "move --workspace 5",
      "move --workspace 6",
      "move --workspace 7",
      "move --workspace 8",
      "move --workspace 9",
      "move --workspace 0",
      "move --workspace 1",
    ]
  # Commands to run just before the WM is shutdown.

  # Example: The below command kills Zebar.
  shutdown_commands: ["shell-exec taskkill /IM zebar.exe /F"]
  # Commands to run after the WM config is reloaded.

  config_reload_commands: []
  # Whether to automatically focus windows underneath the cursor.

  focus_follows_cursor: false
  # Whether to switch back and forth between the previously focused

  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false
  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true
    # Trigger for cursor jump:

    # - 'monitor_focus': Jump when focus changes between monitors.

    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"
  # How windows should be hidden when switching workspaces.

  # - 'cloak': Recommended. Hides windows with no animation and keeps them

  # visible in the taskbar.

  # - 'hide': Legacy method (v3.5 and earlier) that has a brief animation,

  # but has stability issues with some apps.
  hide_method: "cloak"
  # Affects which windows get shown in the native Windows taskbar. Has no
  # effect if `hide_method: 'hide'`.
  # - 'true': Show all windows (regardless of workspace).
  # - 'false': Only show windows from the currently shown workspaces.
  show_all_in_taskbar: true
gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true
  # Gap between adjacent windows.

  inner_gap: "8px"
  # Gap between windows and the screen edge.

  outer_gap:
    top: "8px"
    right: "8px"
    bottom: "8px"
    left: "8px"
    # Overrides `outer_gap` when there is just one window on a workspace.
    # single_window_outer_gap:
    #   top: '80px'
    #   right: '2%'
    #   bottom: '40px'
    #   left: '2%'
window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.

    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#b8bb26"
    # Remove the title bar from the window's frame. Note that this can

    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false
    # Change the corner style of the window's frame.

    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.

      style: "square"
    # Change the transparency of the window.
    transparency:
      enabled: false
      # Can be something like '95%' or '0.95' for slightly transparent windows.
      # '0' or '0%' is fully transparent (and, by consequence, unfocusable).
      opacity: "95%"
  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: "#282828"
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: false
      style: "square"
    transparency:
      enabled: false
      opacity: "0%"
window_behavior:
  # New windows are created in this state whenever possible.

  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"
  # Sets the default options for when a new window is created. This also

  # changes the defaults for when the state change commands, like

  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: false
      # Whether to show floating windows as always on top.

      shown_on_top: false
    fullscreen:
      # Maximize the window if possible. If the window doesn't have a

      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false
      # Whether to show fullscreen windows as always on top.

      shown_on_top: true
workspaces:
  # Middle and also main screen
  - name: "1"
    keep_alive: true
    bind_to_monitor: 1
  - name: "2"
    keep_alive: true
    bind_to_monitor: 1
  - name: "3"
    keep_alive: true
    bind_to_monitor: 1
  - name: "4"
    keep_alive: true
    bind_to_monitor: 1
  - name: "5"
    keep_alive: true
    bind_to_monitor: 1
  - name: "6"
    keep_alive: true
    bind_to_monitor: 1
  - name: "7"
    keep_alive: true
    bind_to_monitor: 1
  - name: "8"
    keep_alive: true
    bind_to_monitor: 1
  - name: "9"
    keep_alive: true
    bind_to_monitor: 1
  - name: "0"
    keep_alive: true
    bind_to_monitor: 1
  # Workspace for leftmost screen to prevent error
  - name: "LeftMonitorFix"
    keep_alive: false
    bind_to_monitor: 0
  - name: "RightMonitorFix"
    keep_alive: false
    bind_to_monitor: 2
window_rules:
  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        # Ignores picture-in-picture windows for browsers.

        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }
      - window_process: { equals: "PowerToys" }
        # Ignore rules for various 3rd-party apps.

        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: "PowerToys" }
        window_title: { regex: ".*? - Peek" }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper" }
      - window_title: { equals: "Command Palette" }
      - window_title: { regex: "New Document|Color" }
        # Ignores photoshop panels and Davinci Resolve windows.
      - window_process:
          {
            regex: "VALORANT-Win64-Shipping|League of Legends|FPSAimTrainer-Win64-Shipping|csgo|javaw|DeadByDaylight-Win64-Shipping",
          }
        # Ignore fullscreen games.

        window_class: { regex: ".*?" }
  - commands: ["move --workspace 1", "focus --workspace 1"]
    match:
      - window_process: { regex: "WindowsTerminal" }
  #   match:
  #     - window_process: {regex: ""}
  #       window_title: {regex: ".*? - File Explorer"}
  - commands: ["move --workspace 5"]
    # - commands: ["move --workspace 2", "focus --workspace 2"]
    #   match:
    #     - window_process: {regex: "msedge|brave|chrome"}
    # - commands: ["move --workspace 3", "focus --workspace 3"]
    #   match:
    #     - window_process: {regex: "Code|Resolve"}
    # - commands: ["move --workspace 4", "focus --workspace 4"]
    #   # [4] Folder and files workspaces

    match:
      - window_process: { regex: "Discord" }
  - commands: ["move --workspace 7"]
    match:
      - window_process: { regex: "Riot Client|LeagueClientUx|steamwebhelper" }
  - commands: ["move --workspace 9", "focus --workspace 9"]
    # [9] Stream Workspace

    match:
      - window_process: { regex: "Streamlabs OBS" }
  - commands: ["move --workspace 0", "focus --workspace 0"]
    # [0] Settings Workspace

    match:
      - window_process: { regex: "Taskmgr|vsthost|Mechvibes" }
binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "left"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "right"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      - commands: ["wm-disable-binding-mode --name resize"]
        # Press enter/escape to return to default keybindings.

        bindings: ["escape", "enter"]
  - name: "pause"
    # When enabled, all keybindings are disabled except for alt+shift+p which

    # returns to default keybindings.
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+p"]
keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+h"]
  - commands: ["focus --direction right"]
    bindings: ["alt+l"]
  - commands: ["focus --direction up"]
    bindings: ["alt+k"]
  - commands: ["focus --direction down"]
    bindings: ["alt+j"]
  - commands: ["move --direction left"]
    # Move focused window in a given direction.

    bindings: ["alt+shift+h"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+l"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+k"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+j"]
  - commands: ["resize --width -2%"]
    # Resize focused window by a percentage or pixel amount.

    bindings: ["alt+u"]
  - commands: ["resize --width +2%"]
    bindings: ["alt+p"]
  - commands: ["resize --height +2%"]
    bindings: ["alt+o"]
  - commands: ["resize --height -2%"]
    bindings: ["alt+i"]
  - commands: ["wm-enable-binding-mode --name pause"]
    # As an alternative to the resize keybindings above, resize mode enables

    # Disables all keybindings until alt+shift+p is pressed again.

    #   bindings: ["alt+r"]

    # - commands: ["wm-enable-binding-mode --name resize"]

    # the name 'resize'.

    # resizing via arrow keys or HJKL. The binding mode is defined above with
    bindings: ["alt+shift+p"]
  - commands: ["toggle-tiling-direction"]
    # Change tiling direction. This determines where new tiling windows will

    # be inserted.
    bindings: ["alt+v"]
  - commands: ["toggle-floating --centered"]
    # Change focus from tiling windows -> floating -> fullscreen.

    # Change the focused window to be floating.

    #   bindings: ['alt+space'] # Conflict with powertoy run shortcut

    # - commands: ['wm-cycle-focus']
    bindings: ["alt+shift+space"]
  - commands: ["toggle-tiling"]
    # Change the focused window to be tiling.

    bindings: ["alt+t"]
  - commands: ["toggle-fullscreen"]
    # Change the focused window to be fullscreen.

    bindings: ["alt+f"]
  - commands: ["close"]
    # Minimize focused window.

    # Close focused window.

    #   bindings: ['alt+m']

    # - commands: ['toggle-minimized']
    bindings: ["alt+shift+q"]
  - commands: ["wm-exit"]
    # Kill GlazeWM process safely.

    bindings: ["alt+shift+e"]
  - commands: ["wm-reload-config"]
    # Re-evaluate configuration file.

    bindings: ["alt+shift+r"]
  - commands: ["wm-redraw"]
    # Redraw all windows.

    bindings: ["alt+shift+w"]
  - commands: ["shell-exec wt"]
    # Launch CMD terminal. Alternatively, use `shell-exec wt` or

    # Terminal and Git Bash respectively.

    # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
    bindings: ["alt+enter"]
  - commands: ["focus --recent-workspace"]
    # Focus the next/previous workspace defined in `workspaces` config.

    # Focus the workspace that last had focus.

    #   bindings: ["alt+a"]

    # - commands: ["focus --prev-workspace"]

    #   bindings: ["alt+s"]

    # - commands: ["focus --next-workspace"]
    bindings: ["alt+d"]
  - commands: ["focus --workspace 1"]
    # Change focus to a workspace defined in `workspaces` config.

    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]
  - commands: ["focus --workspace 0"]
    bindings: ["alt+0"]
  - commands: ["move-workspace --direction left"]
    # Move the focused window's parent workspace to a monitor in a given

    # direction.
    bindings: ["ctrl+alt+shift+h"]
  - commands: ["move-workspace --direction right"]
    bindings: ["ctrl+alt+shift+l"]
  - commands: ["move-workspace --direction up"]
    bindings: ["ctrl+alt+shift+j"]
  - commands: ["move-workspace --direction down"]
    bindings: ["ctrl+alt+shift+k"]
  - commands: ["move --workspace 1", "focus --workspace 1"]
    # Move focused window to a workspace defined in `workspaces` config.

    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7", "focus --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8", "focus --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["alt+shift+9"]
  - commands: ["move --workspace 0", "focus --workspace 0"]
    bindings: ["alt+shift+0"]
